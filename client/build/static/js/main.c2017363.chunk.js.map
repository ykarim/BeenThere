{"version":3,"sources":["components/BubbleChart.js","pages/Home.js","pages/post/index.js","pages/Graph.js","pages/comments/index.js","pages/Resources.js","App.js","serviceWorker.js","index.js"],"names":["colorLegend","color","text","textColor","BubbleChart","event","console","log","this","props","history","push","concat","dataid","_this","data","map","d","_id","value","colorValue","sentiment","selected","react_default","a","createElement","ReactBubbleChart_default","className","selectedColor","selectedTextColor","fixedDomain","min","max","legend","onClick","route","React","Component","withRouter","moment","require","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","content","fetchMode","posts","hidden","voted","onClickPostHandler","bind","assertThisInitialized","onClickVoteHandler","fetchPosts","openCommentsPage","preventDefault","postId","index","_this2","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","result","success","temp","counter","setState","_this3","x","catch","error","mode","sort","b","time","diff","post","_this4","undefined","trigger","trim","style","borderBottom","marginBottom","key","display","flexDirection","alignItems","justifyContent","fromNow","Button","variant","tags","tag","marginRight","Badge","split","item","i","marginTop","comments","length","paddingBottom","paddingTop","Alert","show","_this5","width","textAlign","height","NavDropdown","title","id","Item","changeMode","renderPost","PostPage","isLoading","onChangeTextHandler","submitPost","target","newTags","postContent","Date","toString","pathname","flex","Form","onSubmit","Group","Control","as","rows","onChange","placeholder","build_module","setTags","Label","type","controlId","Check","label","location","similar","add","similaritycount","j","toLowerCase","mytags","k","mytag","setTimeout","padding","components_BubbleChart","Comments","commentText","fetchPostData","comment","reverse","match","params","cursor","_this6","renderPostCard","disabled","Resources","href","App","BrowserRouter","Switch","Route","exact","path","component","Post","Graph","Boolean","window","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2017363.chunk.js","sourcesContent":["import React            from 'react';\r\nimport ReactBubbleChart from 'react-bubble-chart';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nvar colorLegend = [\r\n  //reds from dark to light\r\n  {color: \"#ffedfb\", text: 'Less Similar', textColor: \"#000000\"}, \"#ffe6f9\", \"#ffe0f8\", {color: \"#ffdbf7\", text: 'More Similar', textColor: \"#000000\"},\r\n];\r\n\r\nvar tooltipProps = [{\r\n  css: 'symbol',\r\n  prop: '_id'\r\n}, {\r\n  css: 'value',\r\n  prop: 'value',\r\n  display: 'Last Value'\r\n}, {\r\n  css: 'change',\r\n  prop: 'colorValue',\r\n  display: 'Change'\r\n}];\r\n\r\nclass BubbleChart extends React.Component {\r\n\r\n  route(event) {\r\n    console.log(event)\r\n    this.props.history.push(`/${event.dataid}`)\r\n  }\r\n\r\n  render () {\r\n    var data = this.props.data.map(d => ({\r\n      _id: d._id,\r\n      value: d.value,\r\n      colorValue: d.sentiment,\r\n      selected: d.selected,\r\n      dataid: d.dataid\r\n    }));\r\n\r\n    return <ReactBubbleChart\r\n      className=\"custom-chart\"\r\n      colorLegend={colorLegend}\r\n      data={data}\r\n      selectedColor=\"#737373\"\r\n      selectedTextColor=\"#d9d9d9\"\r\n      fixedDomain={{min: 0, max: 1}}\r\n      legend={true}\r\n      onClick={(event) => this.route(event)}\r\n    />;\r\n  }\r\n}\r\n\r\nexport default withRouter (BubbleChart);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, DropdownButton, NavDropdown, Button, Alert, Form } from 'react-bootstrap';\r\nimport BubbleChart from '../components/BubbleChart';\r\nimport { withRouter } from 'react-router';\r\n\r\nvar moment = require('moment');\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      content: \"\",\r\n      fetchMode: 1,\r\n      posts: [],\r\n      hidden: [],\r\n      voted: [],\r\n    }\r\n\r\n    this.onClickPostHandler = this.onClickPostHandler.bind(this);\r\n    this.onClickVoteHandler = this.onClickVoteHandler.bind(this);\r\n    this.fetchPosts = this.fetchPosts.bind(this);\r\n    this.openCommentsPage = this.openCommentsPage.bind(this);\r\n  }\r\n\r\n  onClickPostHandler(event) {\r\n    event.preventDefault();\r\n\r\n    this.props.history.push('/Post');\r\n  }\r\n\r\n  onClickVoteHandler(postId, index) {\r\n    if (!this.state.voted[index]) {\r\n      fetch(`/api/votePost`, {\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          postId: postId\r\n        }),\r\n      }).then(res => res.json())\r\n        .then(result => {\r\n          if (result && result.success) {\r\n            let temp = this.state.posts\r\n            temp[index].counter += 1\r\n            this.setState({ posts: temp })\r\n          } else {\r\n            // TODO: show error to user\r\n          }\r\n        });\r\n      let temp = this.state.voted;\r\n      temp[index] = true\r\n      this.setState({ voted: temp })\r\n      console.log(this.state.voted)\r\n    }\r\n  }\r\n\r\n  fetchPosts() {\r\n    fetch(`/api/getPosts`)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        if (result && result.posts) {\r\n          var hidden = result.posts.map(x => true);\r\n          var voted = result.posts.map(x => false);\r\n\r\n          this.setState({\r\n            posts: result.posts,\r\n            hidden: hidden,\r\n            voted: voted\r\n          })\r\n\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  openCommentsPage(postId) {\r\n    this.props.history.push(`/${postId}`);\r\n  }\r\n\r\n  show(index) {\r\n    let temp = this.state.hidden;\r\n    temp[index] = !this.state.hidden[index]\r\n    this.setState({ hidden: temp })\r\n  }\r\n\r\n  changeMode(mode) {\r\n    this.setState({ fetchMode: mode })\r\n    let temp = this.state.posts\r\n    if (mode === 1) {\r\n      console.log(\"sort by time\")\r\n      temp.sort(function (a, b) { return (moment(b.time).diff(moment(a.time))) })\r\n    } else {\r\n      console.log(\"sort by count\")\r\n      temp.sort(function (a, b) { return (b.counter - a.counter) })\r\n    }\r\n    var hidden = this.state.posts.map(x => true);\r\n    var voted = this.state.posts.map(x => false);\r\n    this.setState({ posts: temp, hidden: hidden, voted: voted })\r\n    console.log(temp)\r\n  }\r\n\r\n  renderPost(post, index) {\r\n    if (post.trigger === undefined || post.trigger.trim() === \"\") {\r\n      return (\r\n        <div style={{ borderBottom: \"1px solid #8c8c8c\", marginBottom: \"10px\" }} key={index}>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n            <div style={{ color: \"#474747\" }}>\r\n              {moment(post.time).fromNow()}\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n              <Button variant=\"link\" onClick={() => this.onClickVoteHandler(post._id, index)}>I've Been There</Button>\r\n              <div style={{ color: \"#474747\" }}>\r\n                {post.counter}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{marginBottom: \"14px\", display: \"flex\", flexDirection: \"row\"}}>\r\n          {post.tags.map((tag, index) =>\r\n            <div style={{marginRight: \"6px\"}}>\r\n              <Badge variant=\"secondary\">{tag}</Badge>\r\n            </div>)}\r\n          </div>\r\n\r\n          {\r\n            post.text.split('\\n').map((item, i) => {\r\n              return (\r\n                <p key={i}>{item}</p>\r\n              );\r\n            })\r\n          }\r\n\r\n          <div className={\"text-button\"} style={{ color: \"#474747\", marginTop: \"8px\", marginBottom: \"16px\" }} onClick={() => this.openCommentsPage(post._id)}>\r\n            {post.comments.length} comments\r\n        </div>\r\n        </div>)\r\n    }\r\n    else {\r\n      return (\r\n        ((this.state.hidden[index]) ? (\r\n          <div style={{ flexDirection: \"column\", paddingBottom: \"10px\", paddingTop: \"4px\", borderBottom: \"1px solid #8c8c8c\", marginBottom: \"10px\", display: \"flex\", justifyContent: 'center', alignItems: 'center' }} key={index}>\r\n            <Alert variant={'warning'}>\r\n              This post may contain the following triggering topic(s): {post.trigger}\r\n            </Alert>\r\n            <Button variant=\"link\" onClick={() => this.show(index)}>Show post</Button>\r\n          </div>) :\r\n          (<div style={{ borderBottom: \"1px solid #8c8c8c\", marginBottom: \"10px\" }} key={index}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n              <div style={{ color: \"#474747\" }}>\r\n                {moment(post.time).fromNow()}\r\n              </div>\r\n              <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                <Button variant=\"link\" onClick={() => this.onClickVoteHandler(post._id, index)}>\r\n                  I've Been There\r\n              </Button>\r\n                <div style={{ color: \"#474747\" }}>\r\n                  {post.counter}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{marginBottom: \"14px\", display: \"flex\", flexDirection: \"row\"}}>\r\n            {post.tags.map((tag, index) =>\r\n              <div style={{marginRight: \"6px\"}}>\r\n                <Badge variant=\"secondary\">{tag}</Badge>\r\n              </div>)}\r\n            </div>\r\n            {\r\n              post.text.split('\\n').map((item, i) => {\r\n                return (\r\n                  <p key={i}>{item}<br></br></p>\r\n                );\r\n              })\r\n            }\r\n\r\n            <div className={\"text-button\"} style={{ color: \"#474747\", marginTop: \"8px\", marginBottom: \"16px\" }}>\r\n              {post.comments.length} comments\r\n        </div>\r\n          </div>))\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPosts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"30px\" }}>\r\n        <div style={{ width: \"65%\", textAlign: \"flex-start\" }}>\r\n          <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n            <h1>\r\n              Been There\r\n            </h1>\r\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"50px\"}}>\r\n              <Button variant=\"outline-secondary\" onClick={() => this.props.history.push('/Resources')}>Resources</Button>\r\n            </div>\r\n          </div>\r\n          We all go through hard times, and sometimes it's nice to simply know that you aren't alone.\r\n          Post your stories of hard times to see similar stories. Warning! There may be triggering content below,\r\n          please read with caution.\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\", width: \"100%\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginTop: \"14px\" }}>\r\n              Sorting by\r\n        <NavDropdown title={this.state.fetchMode === 1 ? \"Recent\" : \"Top\"} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item onClick={() => this.changeMode(1)}>Recent</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => this.changeMode(0)}>Top</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </div>\r\n            <Button variant=\"outline-primary\" onClick={this.onClickPostHandler}>Post your story</Button>\r\n          </div>\r\n          <div style={{ borderBottom: \"1px solid #8c8c8c\", marginTop: \"12px\", marginBottom: \"12px\" }} />\r\n          {this.state.posts.map((post, index) =>\r\n            this.renderPost(post, index))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Home);\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, DropdownButton, NavDropdown, Button, Form } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\r\nimport \"@pathofdev/react-tag-input/build/index.css\";\r\n\r\nclass PostPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: '',\r\n            trigger: '',\r\n            isLoading: false,\r\n            show: false,\r\n            tags: [],\r\n        };\r\n\r\n        this.onChangeTextHandler = this.onChangeTextHandler.bind(this);\r\n        this.submitPost = this.submitPost.bind(this);\r\n    }\r\n\r\n    onChangeTextHandler(event) {\r\n        this.setState({\r\n            text: event.target.value,\r\n        });\r\n    }\r\n\r\n    setTags(newTags) {\r\n        this.setState({ tags: newTags })\r\n    }\r\n\r\n    submitPost(event) {\r\n        event.preventDefault();\r\n\r\n        fetch(`/api/submitPost`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                postContent: {\r\n                    text: this.state.text,\r\n                    time: new Date().toString(),\r\n                    trigger: this.state.trigger,\r\n                    counter: 0,\r\n                    tags: this.state.tags,\r\n                    comments: [],\r\n                },\r\n            }),\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result && result.success) {\r\n                    if (this.state.show) {\r\n                        this.props.history.push({\r\n                          pathname: '/Graph',\r\n                          state: {\r\n                            text: this.state.text,\r\n                            tags: this.state.tags,\r\n                            id: result.post._id\r\n                          }\r\n                      });\r\n                    } else {\r\n                        this.props.history.push(`/${result.post._id}`);\r\n                    }\r\n                } else {\r\n                    //TODO: show user error\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginTop: \"30px\",\r\n                flex: 1,\r\n            }}>\r\n                <div style={{ width: \"65%\" }}>\r\n                    <Form onSubmit={this.submitPost} style={{\r\n                        display: \"flex\",\r\n                        flex: 0.8,\r\n                    }}>\r\n                        <div style={{\r\n                            flex: 1,\r\n                        }}>\r\n                            <h1 style={{\r\n                                display: \"inline-block\",\r\n                                flex: 1,\r\n                            }}>Share</h1>\r\n\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    rows=\"3\"\r\n                                    onChange={this.onChangeTextHandler}\r\n                                    value={this.state.text}\r\n                                    placeholder=\"Share your story here...\" />\r\n                            </Form.Group>\r\n                            <div style={{ marginBottom: \"14px\" }}>\r\n                                <div style={{ marginBottom: \"6px\" }}>Topics (tags)</div>\r\n                                <ReactTagInput\r\n                                    tags={this.state.tags}\r\n                                    onChange={(newTags) => this.setTags(newTags)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"50%\" }}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Sensitive (possibly triggering) topics</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Leave blank if none\"\r\n                                        onChange={(event) => this.setState({ trigger: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Form.Group controlId=\"formBasicCheckbox\">\r\n                                <Form.Check\r\n                                    type=\"checkbox\"\r\n                                    label=\"I would like to see stories like mine\"\r\n                                    onChange={(event) => this.setState({ show: event.target.value })}\r\n                                />\r\n                                <sub>\r\n                                    If checked, you may see potentially triggering content after sharing.\r\n                                </sub>\r\n                            </Form.Group>\r\n\r\n                            <div style={{\r\n                                flex: 1,\r\n                                display: 'flex',\r\n                                marginTop: \"20px\"\r\n                                // flexDirection: \"row-reverse\"\r\n                            }}>\r\n                                <Button variant=\"primary\" type=\"submit\">Share your story</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(PostPage);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, DropdownButton, NavDropdown, Button } from 'react-bootstrap';\r\nimport BubbleChart from '../components/BubbleChart';\r\nvar moment = require('moment');\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: [{\r\n         _id: this.props.location.state.text,\r\n         value: 20,\r\n         sentiment: 1,\r\n         selected: false,\r\n         similar: [],\r\n         dataid: this.props.location.state.id\r\n      }]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchPosts();\r\n  }\r\n\r\n  fetchPosts() {\r\n    console.log(`/api/getPosts`)\r\n    console.log(``)\r\n    fetch(`/api/getPosts`)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        if (result && result.posts) {\r\n          var add = []\r\n          for(var i = 0; i < result.posts.length; i++) {\r\n            var post = result.posts[i]\r\n            var similaritycount = 0\r\n            if (post.tags !== undefined && this.props.location.state.text !== post.text) {\r\n              for (var j = 0; j < post.tags.length; j++) {\r\n                var tag = post.tags[j].toLowerCase()\r\n                var mytags = this.props.location.state.tags\r\n                console.log(mytags)\r\n                for (var k = 0; k < mytags.length; k++) {\r\n                  var mytag = mytags[k].toLowerCase()\r\n                  console.log(mytag + \" vs \" + tag)\r\n                  if (mytag === tag) {\r\n                    similaritycount += 1\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            if (similaritycount > 0) {\r\n              console.log(\"WOWO\")\r\n              add = add.concat([{_id: post.text, dataid: post._id, value: 7 + (similaritycount*2), sentiment: similaritycount/this.props.location.state.tags.length, selected: false}])\r\n              similaritycount = 0\r\n            }\r\n          }\r\n\r\n          setTimeout(\r\n          function() {\r\n              console.log(add)\r\n              if (add.length > 0) {\r\n                this.setState({data: this.state.data.concat(add)});\r\n              }\r\n          }.bind(this), 1000);\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{height: \"800px\", width: \"100%\", padding: \"0px\", paddingTop: \"20px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"center\"}}>\r\n      <BubbleChart\r\n        data={this.state.data}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, DropdownButton, NavDropdown, Button, Alert, Form } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport moment from 'moment';\r\n\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            post: {},\r\n            commentText: \"\",\r\n            voted: false\r\n        };\r\n\r\n        this.fetchPostData = this.fetchPostData.bind(this);\r\n        this.comment = this.comment.bind(this);\r\n        this.onChangeTextHandler = this.onChangeTextHandler.bind(this);\r\n    }\r\n\r\n    fetchPostData(postId) {\r\n      console.log(\"fdsfds\")\r\n        fetch(`/api/getPost/` + postId)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                if (result.success) {\r\n                    let temp = result.post;\r\n                    temp.comments = result.post.comments.reverse();\r\n                    this.setState({\r\n                        commentText: \"\",\r\n                        post: temp\r\n                    })\r\n                    console.log(this.state.commentText)\r\n                }\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    onClickVoteHandler(postId, index) {\r\n      if (!this.state.voted) {\r\n        fetch('http://localhost:5000/api/votePost', {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            postId: postId\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(result => {\r\n            if (result && result.success) {\r\n              let temp = this.state.post\r\n              temp.counter += 1\r\n              this.setState({ post: temp })\r\n            } else {\r\n              // TODO: show error to user\r\n            }\r\n          });\r\n        this.setState({ voted: true })\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPostData(this.props.match.params.post);\r\n    }\r\n\r\n    onChangeTextHandler(event) {\r\n        this.setState({\r\n            commentText: event.target.value,\r\n        });\r\n    }\r\n\r\n    comment(event) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/commentPost', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                comment: this.state.commentText,\r\n                postId: this.state.post._id\r\n            }),\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result && result.success) {\r\n                    this.fetchPostData(this.props.match.params.post);\r\n                }\r\n            });\r\n    }\r\n\r\n    renderPostCard(post) {\r\n        if (post && post.text) {\r\n            return (\r\n                <div style={{ borderBottom: \"1px solid #8c8c8c\", marginBottom: \"10px\" }}>\r\n                    <h1 style={{ cursor: \"pointer\" }} onClick={() => this.props.history.push(`/`)}>\r\n                        Been There\r\n                </h1>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                        <div style={{ color: \"#474747\" }}>\r\n                            {moment(post.time).fromNow()}\r\n                        </div>\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                            <Button variant=\"link\" onClick={() => this.onClickVoteHandler(post._id)}>I've Been There</Button>\r\n                            <div style={{ color: \"#474747\" }}>\r\n                                {post.counter}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ marginBottom: \"14px\", display: \"flex\", flexDirection: \"row\" }}>\r\n                        {post.tags.map((tag, index) =>\r\n                            <div style={{ marginRight: \"6px\" }}>\r\n                                <Badge variant=\"secondary\">{tag}</Badge>\r\n                            </div>)}\r\n                    </div>\r\n                    {\r\n                        post.text.split('\\n').map((item, i) => {\r\n                            return (\r\n                                <p key={i}>{item}</p>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                    <div style={{ color: \"#474747\", marginTop: \"8px\", marginBottom: \"16px\" }}>\r\n                        {post.comments.length} comments\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"30px\" }}>\r\n                <div style={{ width: \"65%\", textAlign: \"flex-start\" }}>\r\n                    <div style={{ flex: 0.8, flexDirection: 'row' }}>\r\n                        {this.renderPostCard(this.state.post)}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3 style={{\r\n                            display: \"inline-block\",\r\n                            flex: 1,\r\n                            marginBottom: \"10px\"\r\n                        }}>Comments</h3>\r\n                        <Form\r\n                            onSubmit={(event) => this.comment(event)}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    style={{ marginBottom: \"10px\" }}\r\n                                    as=\"textarea\"\r\n                                    rows=\"3\"\r\n                                    onChange={this.onChangeTextHandler}\r\n                                    value={this.state.commentText}\r\n                                    placeholder=\"Share your stories or words of encouragement here...\" />\r\n                                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                    <Button disabled={this.state.commentText === \"\"} variant=\"primary\" type=\"submit\" onClick={(event) => this.comment(event)}>Comment</Button>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        {this.state.post && this.state.post.comments ? this.state.post.comments.map((comment, index) =>\r\n                            <div style={{ marginTop: \"10px\" }}>\r\n                                {comment}\r\n                            </div>) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, DropdownButton, NavDropdown, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\n\r\nvar moment = require('moment');\r\n\r\nclass Resources extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"30px\" }}>\r\n        <div style={{ width: \"65%\", textAlign: \"flex-start\", display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-start\"}}>\r\n          <h1 style={{cursor: \"pointer\"}} onClick={() => this.props.history.push(`/`)}>\r\n            Resources\r\n          </h1>\r\n          Please check out the resources below if you are experiencing any of the issues below.\r\n\r\n        <h4 style={{marginTop: \"20px\"}}>\r\n          Suicide\r\n        </h4>\r\n        <a href=\"https://suicidepreventionlifeline.org\">Suicide Prevention Lifeline</a>\r\n        <a href=\"https://www.sprc.org\">Suicide Prevention Resources Center</a>\r\n        <a href=\"https://www.translifeline.org/\">Trans Lifeline</a>\r\n\r\n        <h4 style={{marginTop: \"20px\"}}>\r\n          Depression\r\n        </h4>\r\n        <a href=\"https://www.mhanational.org/depression-support-and-advocacy\">Mental Health America</a>\r\n        <a href=\"https://nndc.org/resource-links/\">National Network of Depression Centers</a>\r\n        <a href=\"https://adaa.org/living-with-anxiety/ask-and-learn/resources/\">AADA</a>\r\n\r\n        <h4 style={{marginTop: \"20px\"}}>\r\n          Substance Abuse\r\n        </h4>\r\n        <a href=\"https://www.samhsa.gov/find-help/national-helpline\">National Helpline</a>\r\n        <a href=\"https://www.drugabuse.gov/publications/principles-drug-addiction-treatment-research-based-guide-third-edition/resources\">DrugAbuse.gov</a>\r\n        <a href=\"https://www.addictioncenter.com/community-resources/\">Addiction Center</a>\r\n\r\n        <h4 style={{marginTop: \"20px\"}}>\r\n          Anxiety\r\n        </h4>\r\n        <a href=\"https://www.everydayhealth.com/anxiety/guide/resources/\">Anxiety Resources</a>\r\n        <a href=\"https://www.rtor.org/anxiety/\">RTOR</a>\r\n\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default (Resources);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Home from './pages/Home'\r\nimport Post from './pages/post';\r\nimport Graph from './pages/Graph'\r\nimport Comments from './pages/comments';\r\nimport Resources from  './pages/Resources';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/Post' component={Post} />\r\n            <Route exact path='/Graph' component={Graph} />\r\n            <Route exact path='/Resources' component={Resources} />\r\n            <Route exact path=\"/:post\" component={Comments} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}