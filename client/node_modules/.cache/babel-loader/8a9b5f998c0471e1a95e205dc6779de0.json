{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\jkair\\\\Desktop\\\\BeenThere\\\\client\\\\src\\\\pages\\\\comments\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Badge, DropdownButton, NavDropdown, Button, Alert, Form } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  function Comments(props) {\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comments).call(this, props));\n    _this.state = {\n      post: {},\n      commentText: \"\",\n      voted: false\n    };\n    _this.fetchPostData = _this.fetchPostData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.comment = _this.comment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeTextHandler = _this.onChangeTextHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"fetchPostData\",\n    value: function fetchPostData(postId) {\n      var _this2 = this;\n\n      console.log(\"fdsfds\");\n      fetch('http://localhost:5000/api/getPost/' + postId).then(function (result) {\n        return result.json();\n      }).then(function (result) {\n        if (result.success) {\n          var temp = result.post;\n          temp.comments = result.post.comments.reverse();\n\n          _this2.setState({\n            commentText: \"\",\n            post: temp\n          });\n\n          console.log(_this2.state.commentText);\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"onClickVoteHandler\",\n    value: function onClickVoteHandler(postId, index) {\n      var _this3 = this;\n\n      if (!this.state.voted) {\n        fetch('http://localhost:5000/api/votePost', {\n          method: 'POST',\n          // *GET, POST, PUT, DELETE, etc.\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            postId: postId\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          if (result && result.success) {\n            var temp = _this3.state.post;\n            temp.counter += 1;\n\n            _this3.setState({\n              post: temp\n            });\n          } else {// TODO: show error to user\n          }\n        });\n        this.setState({\n          voted: true\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPostData(this.props.match.params.post);\n    }\n  }, {\n    key: \"onChangeTextHandler\",\n    value: function onChangeTextHandler(event) {\n      this.setState({\n        commentText: event.target.value\n      });\n    }\n  }, {\n    key: \"comment\",\n    value: function comment(event) {\n      var _this4 = this;\n\n      event.preventDefault();\n      fetch('http://localhost:5000/api/commentPost', {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          comment: this.state.commentText,\n          postId: this.state.post._id\n        })\n      }).then(function (result) {\n        return result.json();\n      }).then(function (result) {\n        if (result && result.success) {\n          _this4.fetchPostData(_this4.props.match.params.post);\n        }\n      });\n    }\n  }, {\n    key: \"renderPostCard\",\n    value: function renderPostCard(post) {\n      var _this5 = this;\n\n      if (post && post.text) {\n        return React.createElement(\"div\", {\n          style: {\n            borderBottom: \"1px solid #8c8c8c\",\n            marginBottom: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: function onClick() {\n            return _this5.props.history.push(\"/\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Been There\"), React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            color: \"#474747\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, moment(post.time).fromNow()), React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"link\",\n          onClick: function onClick() {\n            return _this5.onClickVoteHandler(post._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"I've Been There\"), React.createElement(\"div\", {\n          style: {\n            color: \"#474747\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, post.counter))), React.createElement(\"div\", {\n          style: {\n            marginBottom: \"14px\",\n            display: \"flex\",\n            flexDirection: \"row\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, post.tags.map(function (tag, index) {\n          return React.createElement(\"div\", {\n            style: {\n              marginRight: \"6px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(Badge, {\n            variant: \"secondary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, tag));\n        })), post.text.split('\\n').map(function (item, i) {\n          return React.createElement(\"p\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, item);\n        }), React.createElement(\"div\", {\n          style: {\n            color: \"#474747\",\n            marginTop: \"8px\",\n            marginBottom: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, post.comments.length, \" comments\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: \"65%\",\n          textAlign: \"flex-start\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          flex: 0.8,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.renderPostCard(this.state.post)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          display: \"inline-block\",\n          flex: 1,\n          marginBottom: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Comments\"), React.createElement(Form, {\n        onSubmit: function onSubmit(event) {\n          return _this6.comment(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        style: {\n          marginBottom: \"10px\"\n        },\n        as: \"textarea\",\n        rows: \"3\",\n        onChange: this.onChangeTextHandler,\n        value: this.state.commentText,\n        placeholder: \"Share your stories or words of encouragement here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"flex-end\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: this.state.commentText === \"\",\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: function onClick(event) {\n          return _this6.comment(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Comment\")))), this.state.post && this.state.post.comments ? this.state.post.comments.map(function (comment, index) {\n        return React.createElement(\"div\", {\n          style: {\n            marginTop: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, comment);\n      }) : null)));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\jkair\\Desktop\\BeenThere\\client\\src\\pages\\comments\\index.js"],"names":["React","Component","Link","Badge","DropdownButton","NavDropdown","Button","Alert","Form","withRouter","moment","Comments","props","state","post","commentText","voted","fetchPostData","bind","comment","onChangeTextHandler","postId","console","log","fetch","then","result","json","success","temp","comments","reverse","setState","catch","error","index","method","headers","body","JSON","stringify","res","counter","match","params","event","target","value","preventDefault","_id","text","borderBottom","marginBottom","cursor","history","push","display","flexDirection","alignItems","justifyContent","color","time","fromNow","onClickVoteHandler","tags","map","tag","marginRight","split","item","i","marginTop","length","width","textAlign","flex","renderPostCard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, DropdownButton, NavDropdown, Button, Alert, Form } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router';\r\nimport moment from 'moment';\r\n\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            post: {},\r\n            commentText: \"\",\r\n            voted: false\r\n        };\r\n\r\n        this.fetchPostData = this.fetchPostData.bind(this);\r\n        this.comment = this.comment.bind(this);\r\n        this.onChangeTextHandler = this.onChangeTextHandler.bind(this);\r\n    }\r\n\r\n    fetchPostData(postId) {\r\n      console.log(\"fdsfds\")\r\n        fetch('http://localhost:5000/api/getPost/' + postId)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                if (result.success) {\r\n                    let temp = result.post;\r\n                    temp.comments = result.post.comments.reverse();\r\n                    this.setState({\r\n                        commentText: \"\",\r\n                        post: temp\r\n                    })\r\n                    console.log(this.state.commentText)\r\n                }\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    onClickVoteHandler(postId, index) {\r\n      if (!this.state.voted) {\r\n        fetch('http://localhost:5000/api/votePost', {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            postId: postId\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(result => {\r\n            if (result && result.success) {\r\n              let temp = this.state.post\r\n              temp.counter += 1\r\n              this.setState({ post: temp })\r\n            } else {\r\n              // TODO: show error to user\r\n            }\r\n          });\r\n        this.setState({ voted: true })\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPostData(this.props.match.params.post);\r\n    }\r\n\r\n    onChangeTextHandler(event) {\r\n        this.setState({\r\n            commentText: event.target.value,\r\n        });\r\n    }\r\n\r\n    comment(event) {\r\n        event.preventDefault();\r\n        fetch('http://localhost:5000/api/commentPost', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                comment: this.state.commentText,\r\n                postId: this.state.post._id\r\n            }),\r\n        }).then(result => result.json())\r\n            .then(result => {\r\n                if (result && result.success) {\r\n                    this.fetchPostData(this.props.match.params.post);\r\n                }\r\n            });\r\n    }\r\n\r\n    renderPostCard(post) {\r\n        if (post && post.text) {\r\n            return (\r\n                <div style={{ borderBottom: \"1px solid #8c8c8c\", marginBottom: \"10px\" }}>\r\n                    <h1 style={{ cursor: \"pointer\" }} onClick={() => this.props.history.push(`/`)}>\r\n                        Been There\r\n                </h1>\r\n                    <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                        <div style={{ color: \"#474747\" }}>\r\n                            {moment(post.time).fromNow()}\r\n                        </div>\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\r\n                            <Button variant=\"link\" onClick={() => this.onClickVoteHandler(post._id)}>I've Been There</Button>\r\n                            <div style={{ color: \"#474747\" }}>\r\n                                {post.counter}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ marginBottom: \"14px\", display: \"flex\", flexDirection: \"row\" }}>\r\n                        {post.tags.map((tag, index) =>\r\n                            <div style={{ marginRight: \"6px\" }}>\r\n                                <Badge variant=\"secondary\">{tag}</Badge>\r\n                            </div>)}\r\n                    </div>\r\n                    {\r\n                        post.text.split('\\n').map((item, i) => {\r\n                            return (\r\n                                <p key={i}>{item}</p>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                    <div style={{ color: \"#474747\", marginTop: \"8px\", marginBottom: \"16px\" }}>\r\n                        {post.comments.length} comments\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"30px\" }}>\r\n                <div style={{ width: \"65%\", textAlign: \"flex-start\" }}>\r\n                    <div style={{ flex: 0.8, flexDirection: 'row' }}>\r\n                        {this.renderPostCard(this.state.post)}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3 style={{\r\n                            display: \"inline-block\",\r\n                            flex: 1,\r\n                            marginBottom: \"10px\"\r\n                        }}>Comments</h3>\r\n                        <Form\r\n                            onSubmit={(event) => this.comment(event)}>\r\n                            <Form.Group>\r\n                                <Form.Control\r\n                                    style={{ marginBottom: \"10px\" }}\r\n                                    as=\"textarea\"\r\n                                    rows=\"3\"\r\n                                    onChange={this.onChangeTextHandler}\r\n                                    value={this.state.commentText}\r\n                                    placeholder=\"Share your stories or words of encouragement here...\" />\r\n                                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                                    <Button disabled={this.state.commentText === \"\"} variant=\"primary\" type=\"submit\" onClick={(event) => this.comment(event)}>Comment</Button>\r\n                                </div>\r\n                            </Form.Group>\r\n                        </Form>\r\n                        {this.state.post && this.state.post.comments ? this.state.post.comments.map((comment, index) =>\r\n                            <div style={{ marginTop: \"10px\" }}>\r\n                                {comment}\r\n                            </div>) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}